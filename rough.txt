using System;
using System.Collections.Generic;

namespace EmployeePayrollSystem
{
    // Base class
    public class Employee
    {
        public int EmployeeId { get; set; }
        public string Name { get; set; }
        public string Department { get; set; }

        public Employee(int employeeId, string name, string department)
        {
            EmployeeId = employeeId;
            Name = name;
            Department = department;
        }

        public virtual void DisplayDetails()
        {
            Console.WriteLine($"ID: {EmployeeId}, Name: {Name}, Department: {Department}");
        }
    }

    // Derived class
    public class PermanentEmployee : Employee
    {
        public double AnnualSalary { get; set; }

        public PermanentEmployee(int employeeId, string name, string department, double annualSalary)
            : base(employeeId, name, department)
        {
            AnnualSalary = annualSalary;
        }

        public override void DisplayDetails()
        {
            base.DisplayDetails();
            Console.WriteLine($"Annual Salary: {AnnualSalary:C}");
        }
    }

    // Derived class
    public class ContractEmployee : Employee
    {
        public double HourlyRate { get; set; }
        public int HoursWorked { get; set; }

        public ContractEmployee(int employeeId, string name, string department, double hourlyRate, int hoursWorked)
            : base(employeeId, name, department)
        {
            HourlyRate = hourlyRate;
            HoursWorked = hoursWorked;
        }

        public double CalculatePay()
        {
            return HourlyRate * HoursWorked;
        }

        public override void DisplayDetails()
        {
            base.DisplayDetails();
            Console.WriteLine($"Hourly Rate: {HourlyRate:C}, Hours Worked: {HoursWorked}, Total Pay: {CalculatePay():C}");
        }
    }

    // Encapsulation: Payroll System
    public class Payroll
    {
        private List<Employee> Employees = new List<Employee>();

        public void AddEmployee(Employee employee)
        {
            Employees.Add(employee);
        }

        public void DisplayAllEmployees()
        {
            foreach (var employee in Employees)
            {
                employee.DisplayDetails();
                Console.WriteLine("----------------------");
            }
        }
    }

    // Entry point
    class Program
    {
        static void Main(string[] args)
        {
            Payroll payroll = new Payroll();

            // Add employees
            payroll.AddEmployee(new PermanentEmployee(1, "Alice", "IT", 60000));
            payroll.AddEmployee(new ContractEmployee(2, "Bob", "HR", 50, 120));

            // Display all employees
            payroll.DisplayAllEmployees();

            Console.ReadLine();
        }
    }
}

------------------------------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

namespace EmployeePayrollSystem
{
    // Base class
    public class Employee
    {
        public int EmployeeId { get; set; }
        public string Name { get; set; }
        public string Department { get; set; }

        public Employee(int employeeId, string name, string department)
        {
            EmployeeId = employeeId;
            Name = name;
            Department = department;
        }

        public virtual void DisplayDetails()
        {
            Console.WriteLine($"ID: {EmployeeId}, Name: {Name}, Department: {Department}");
        }

        public virtual double CalculateSalary()
        {
            return 0.0;
        }
    }

    // Derived class for permanent employees
    public class PermanentEmployee : Employee
    {
        public double AnnualSalary { get; set; }

        public PermanentEmployee(int employeeId, string name, string department, double annualSalary)
            : base(employeeId, name, department)
        {
            AnnualSalary = annualSalary;
        }

        public override void DisplayDetails()
        {
            base.DisplayDetails();
            Console.WriteLine($"Annual Salary: {AnnualSalary:C}");
        }

        public override double CalculateSalary()
        {
            return AnnualSalary / 12; // Monthly salary
        }
    }

    // Derived class for contract employees
    public class ContractEmployee : Employee
    {
        public double HourlyRate { get; set; }
        public int HoursWorked { get; set; }

        public ContractEmployee(int employeeId, string name, string department, double hourlyRate, int hoursWorked)
            : base(employeeId, name, department)
        {
            HourlyRate = hourlyRate;
            HoursWorked = hoursWorked;
        }

        public override void DisplayDetails()
        {
            base.DisplayDetails();
            Console.WriteLine($"Hourly Rate: {HourlyRate:C}, Hours Worked: {HoursWorked}");
        }

        public override double CalculateSalary()
        {
            return HourlyRate * HoursWorked; // Total pay
        }
    }

    // Encapsulation: Payroll System
    public class Payroll
    {
        private List<Employee> Employees = new List<Employee>();

        public void AddEmployee(Employee employee)
        {
            Employees.Add(employee);
        }

        public void DisplayAllEmployees()
        {
            foreach (var employee in Employees)
            {
                employee.DisplayDetails();
                Console.WriteLine($"Monthly Salary: {employee.CalculateSalary():C}");
                Console.WriteLine("----------------------");
            }
        }
    }

    // Entry point
    class Program
    {
        static void Main(string[] args)
        {
            Payroll payroll = new Payroll();

            // Add employees
            payroll.AddEmployee(new PermanentEmployee(1, "Alice", "IT", 60000));
            payroll.AddEmployee(new ContractEmployee(2, "Bob", "HR", 50, 120));

            // Display all employees
            payroll.DisplayAllEmployees();

            Console.ReadLine();
        }
    }
}
