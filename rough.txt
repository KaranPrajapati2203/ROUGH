Practice 5

IN APP COMPONENT

import { CommonModule } from '@angular/common';
import { Component } from '@angular/core';
import { FormsModule } from '@angular/forms';

@Component({
  selector: 'app-profile',
  standalone: true,
  imports: [FormsModule, CommonModule],
  templateUrl: './profile.component.html',
  styleUrl: './profile.component.css'
})
export class ProfileComponent {
  dropdownItems = ["Ice-cream", "Roti", "Sabzi", "Papad", "Salad"];
  selectedItem = "";
}

-----

<label for="dropdown">Select From Dropdown:</label>
<select name="dropdown" id="dropdown" [(ngModel)]="selectedItem">
    <option *ngFor="let item of dropdownItems" [value]="item">{{item}}</option>
</select>
<br>
<p>Selected Item is: {{selectedItem}}</p>


----------------------------------------------------------------------------------------

Practice 6

import { Component } from '@angular/core';
import { FormsModule } from '@angular/forms';

@Component({
  selector: 'app-profile',
  standalone: true,
  imports: [FormsModule],
  templateUrl: './profile.component.html',
  styleUrl: './profile.component.css'
})
export class ProfileComponent {
  name: string = "";
  email: string = "";
  phone: string = "";
}

------------------

<label for="name">Enter name:</label>
<input type="text" id="name" [(ngModel)]="name"><br>
<label for="email">Enter email:</label>
<input type="text" id="email" [(ngModel)]="email"><br>
<label for="phone">Enter phone number:</label>
<input type="text" id="phone" [(ngModel)]="phone"><br>
<div>
    <p>Name: {{name}}</p>
    <p>email: {{email}}</p>
    <p>Phone number: {{phone}}</p>
</div>

---------------------------------------------------------------------------------------------

Practice 7

IN APP COMPONENT

import { CommonModule } from '@angular/common';
import { Component } from '@angular/core';
import { FormsModule } from '@angular/forms';

@Component({
  selector: 'app-profile',
  standalone: true,
  imports: [FormsModule, CommonModule],
  templateUrl: './profile.component.html',
  styleUrl: './profile.component.css'
})
export class ProfileComponent {
  list = ["Ram", "Shyam", "Sita", "Geeta", "Rahul", "Anjali", "Heer", "Ranjha", "Romeo", "Juliet"];
  filteredList = [...this.list];
  inputname: string = "";
  findData() {
    if (this.inputname.trim() === "") {
      this.filteredList = [...this.list];
    }
    else {
      this.filteredList = this.list.filter((element) => element.toLowerCase().includes(this.inputname.trim().toLowerCase()))
    }
  }
}

-----

<input type="search" name="search" id="search" [(ngModel)]="inputname" (input)="findData()"
    placeholder="Search names....">
<div>
    <ol id="list" type="1">
        <li *ngFor="let data of filteredList" id={{data}}>{{data}}</li>
    </ol>
</div>

---------------------------------------------------------------

Practice 8 

IN APP COMPONENT,MAY PROVIDE BOOTSTRAP

import { Component } from '@angular/core';
import { FormsModule } from '@angular/forms';

@Component({
  selector: 'app-profile',
  standalone: true,
  imports: [FormsModule],
  templateUrl: './profile.component.html',
  styleUrl: './profile.component.css'
})
export class ProfileComponent {
  counter: number = 0;
  increment() {
    if (this.counter < 100) {
      this.counter += 1;
    }
  }
  decrement() {
    if (this.counter > 0) {
      this.counter -= 1;
    }
  }
}

-----

<div style="display: flex;">
    <button class="btn btn-success" (click)="increment()">+</button>
    <input type="number" [(ngModel)]="counter" disabled>
    <button class="btn btn-danger" (click)="decrement()">-</button>
</div>

----------------------------------------------------------------

Practice 9

import { CommonModule } from '@angular/common';
import { Component } from '@angular/core';
import { FormsModule } from '@angular/forms';

@Component({
  selector: 'app-profile',
  standalone: true,
  imports: [FormsModule, CommonModule],
  templateUrl: './profile.component.html',
  styleUrl: './profile.component.css'
})
export class ProfileComponent {
  tasks = ["Drink water every 50 minutes", "Meet Rahul at 5 pm"];
  task: string = "";
  addTask() {
    if (this.task.trim() !== "") {
      this.tasks.push(this.task);
      this.task = "";
    }
  }
}

-----

<label for="task">Enter Task:</label>
<input type="text" name="task" id="task" [(ngModel)]="task"><br><br>
<button (click)="addTask()">Add to task list</button><br>
<ol>
    <li *ngFor="let task of tasks">{{task}}</li>
</ol>

------------------------------------------------------------

Practice 10

IN APP COMPONENT

import { CommonModule } from '@angular/common';
import { Component } from '@angular/core';
import { FormsModule } from '@angular/forms';

@Component({
  selector: 'app-profile',
  standalone: true,
  imports: [FormsModule, CommonModule],
  templateUrl: './profile.component.html',
  styleUrl: './profile.component.css'
})
export class ProfileComponent {
  earning: number = 0;
  expenses: number[] = [];
  expense: number = 0;
  balance: number = 0;
  hasExpense: boolean = false;
  totalExpense: number = 0;
  addExpense() {
    if (this.expense > 0) {
      this.hasExpense = true;
      this.totalExpense = 0;
      this.expenses.push(this.expense);
      for (let e of this.expenses) {
        this.totalExpense += e;
      }
      this.balance = this.earning - this.totalExpense;
      this.expense = 0;
    }
  }
}

-----

<label for="earning">Enter monthly earning:</label>
<input type="number" name="earning" id="earning" [(ngModel)]="earning"><br>
<label for="expense">Enter expense:</label>
<input type="number" name="expense" id="expense" [(ngModel)]="expense"><br>
<button (click)="addExpense()">Add expense</button>
<div *ngIf="hasExpense">
    <h3>Expense list</h3>
    <ol type="1">
        <li *ngFor="let expense of expenses">{{expense}}</li>
    </ol>
</div>
<p>Earning: {{earning}}</p>
<p>Total Expense: {{totalExpense}}</p>
<p>Remaining Balance: {{balance}}</p>

----------------------------------------------------------------------------

Practice 12

IN APP COMPONENT

import { CommonModule } from '@angular/common';
import { Component } from '@angular/core';
import { FormsModule } from '@angular/forms';

@Component({
  selector: 'app-profile',
  standalone: true,
  imports: [FormsModule, CommonModule],
  templateUrl: './profile.component.html',
  styleUrl: './profile.component.css'
})
export class ProfileComponent {
  price: number = 0;
  discount: number = 0;
  discountAmount: number = 0;
  finalPrice: number = 0;
  setDefaultFinalPrice() {
    this.finalPrice = this.price;
    this.getPrice();
  }
  getPrice() {
    this.discountAmount = (this.price * this.discount) / 100;
    this.finalPrice = this.price - ((this.price * this.discount) / 100);
  }
}

-----

<h2>Discount Form:</h2>
<label for="price">Enter Price:</label>
<input type="number" name="price" id="price" [(ngModel)]="price" (input)="setDefaultFinalPrice()"><br>
<label for="discount">Select Discount Percentage: {{discount}}%</label>
<input type="range" name="discount" id="discount" min="0" max="100" [(ngModel)]="discount" (input)="getPrice()">
<p>Original Price: {{price}} Rs</p>
<p>Discount Percentage: {{discount}}%</p>
<p>Discount amount: {{discountAmount}} Rs</p>
<p>Final Price: {{finalPrice}} Rs</p>

--------------------------------------------------------------------------------------

Practice 13

IN APP

import { CommonModule } from '@angular/common';
import { Component } from '@angular/core';
import { FormsModule } from '@angular/forms';

@Component({
  selector: 'app-profile',
  standalone: true,
  imports: [FormsModule, CommonModule],
  templateUrl: './profile.component.html',
  styleUrl: './profile.component.css'
})
export class ProfileComponent {
  total: number = 0;
  distance: number = 0;
  weight: number = 1;
  ratePerKm: number = 10;
  ratePerKg: number = 175;
  weights: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
  getRate() {
    if (this.distance > 0) {
      this.total = (this.distance * this.ratePerKm) + (this.weight * this.ratePerKg);
    }
  }
}

-----

<h2>Shipping Cost Calculator:</h2>
<h3>Our Rates are: {{ratePerKg}} per kg and {{ratePerKm}} per km</h3>
<label for="weight">Select Weight:</label>
<select id="weight" [(ngModel)]="weight" (change)="getRate()">
    <option *ngFor="let weight of weights" [value]="weight">{{weight}} kg(s)</option>
</select><br>
<label for="distance">Select Distance: {{distance}} km(s)</label>
<input type="range" name="distance" id="distance" [(ngModel)]="distance" min="0" max="50000" (input)="getRate()"><br>
<p>Distance: {{distance}} km(s)</p>
<p>Weight: {{weight}} kg(s)</p>
<p>Total Cost: {{total}} Rs</p>

--------------------------------------------------------------------------------------------

Practice 14

import { CommonModule } from '@angular/common';
import { Component } from '@angular/core';
import { FormsModule } from '@angular/forms';

@Component({
  selector: 'app-profile',
  standalone: true,
  imports: [FormsModule, CommonModule],
  templateUrl: './profile.component.html',
  styleUrl: './profile.component.css'
})
export class ProfileComponent {
  celcius: number = -40;
  fahreinheit: number = -40;
  getFahreinheit() {
    this.fahreinheit = this.celcius * 1.8 + 32;
  }
  getCelcius() {
    this.celcius = (this.fahreinheit - 32) / 1.8;
  }
}

-----

<h2>Temperature Converter:</h2>
<p>
    <label for="celcius">Degree Celcius</label>
    <input type="number" name="celcius" id="celcius" [(ngModel)]="celcius" (input)="getFahreinheit()">
</p>
<p>
    <label for="fahreinheit">Degree Celcius</label>
    <input type="number" name="fahreinheit" id="fahreinheit" [(ngModel)]="fahreinheit" (input)="getCelcius()">
</p>

----------------------------------------------------------------------------------------------------

Practice 15

NEED TO WORK ON IT 

import { CommonModule } from '@angular/common';
import { Component } from '@angular/core';
import { FormsModule } from '@angular/forms';

@Component({
  selector: 'app-profile',
  standalone: true,
  imports: [FormsModule, CommonModule],
  templateUrl: './profile.component.html',
  styleUrl: './profile.component.css'
})
export class ProfileComponent {
  questions = [
    {
      question: 'What is the capital of France?',
      options: ['Berlin', 'Madrid', 'Paris', 'Rome'],
      correctAnswer: 'Paris',
    },
    {
      question: 'Which is the largest planet in the solar system?',
      options: ['Earth', 'Jupiter', 'Mars', 'Venus'],
      correctAnswer: 'Jupiter',
    },
    {
      question: 'Who wrote "Romeo and Juliet"?',
      options: ['William Shakespeare', 'Charles Dickens', 'Leo Tolstoy', 'Mark Twain'],
      correctAnswer: 'William Shakespeare',
    },
    {
      question: 'What is the chemical symbol for water?',
      options: ['H2O', 'CO2', 'O2', 'NaCl'],
      correctAnswer: 'H2O',
    },
    {
      question: 'Which programming language is used for web development?',
      options: ['Python', 'JavaScript', 'C++', 'Swift'],
      correctAnswer: 'JavaScript',
    }
  ];

  getCounter(question: string) {
    let index = this.questions.findIndex((element) => element.question === question);
    return index + 1;
  }

  getResult() {

  }
}

-----

<div style="display: flex; position: sticky;top: 0;background-color: white;">
    <h2>Quiz</h2>
    <button (click)="getResult()" style="margin-left: auto;cursor: pointer;">Submit quiz</button>
</div>
<div *ngFor="let q of questions">
    <h3>Q{{getCounter(q.question)}}. {{q.question}}</h3>
    <p><label name="options" id="options">Select Answer:</label></p>
    <div *ngFor="let option of q.options">
        <input type="radio" name="options" [value]="option" [id]="'option-'+ option">{{option}}
    </div>
</div>

-------------------------------------------------------------------------------------------

Practice 16

IN APP COMPONENT

import { CommonModule } from '@angular/common';
import { Component } from '@angular/core';
import { FormsModule } from '@angular/forms';

@Component({
  selector: 'app-profile',
  standalone: true,
  imports: [FormsModule, CommonModule],
  templateUrl: './profile.component.html',
  styleUrl: './profile.component.css'
})
export class ProfileComponent {
  name: string = "";
  price: number = 0;
  quantity: number = 0;
  total: number | string = 0;
  getTotal() {
    if (this.name && this.price > 0 && this.quantity > 0) {
      this.total = (this.price * this.quantity).toFixed(2);
    } else {
      this.total = 0;
    }
  }
}

-----

<h2>Stock Management:</h2>
<p>
    <label>Stock Name:</label>
    <input type="text" [(ngModel)]="name" (input)="getTotal()" placeholder="Enter stock name">
</p>
<p>
    <label>Stock Price:</label>
    <input type="number" (input)="getTotal()" [(ngModel)]="price">
</p>
<p>
    <label for="stockQuantity">Stock Quantity:</label>
    <input type="number" (input)="getTotal()" id="stockQuantity" [(ngModel)]="quantity">
</p>
<p>Stock Name: {{name}}</p>
<p>Stock Price: {{price}} Rs</p>
<p>Stock Quantity: {{quantity}}</p>
<b>Total Price: {{total}} Rs</b>

-----------------------------------------------------------------------------------

Practice 17

IN APP COMPONENT

import { CommonModule } from '@angular/common';
import { Component } from '@angular/core';
import { FormsModule } from '@angular/forms';

@Component({
  selector: 'app-profile',
  standalone: true,
  imports: [FormsModule, CommonModule],
  templateUrl: './profile.component.html',
  styleUrl: './profile.component.css'
})
export class ProfileComponent {
  foodCost: number = 0;
  travelCost: number = 0;
  stayingCost: number = 0;
  total: number = 0;
  getTotal() {
    if (this.foodCost >= 0 && this.travelCost >= 0 && this.stayingCost >= 0) {
      this.total = this.foodCost + this.travelCost + this.stayingCost;
    } else {
      this.total = 0;
    }
  }
}

-----

<h2>Expense Tracker:</h2>
<p>
    <label for="foodCost">Food Cost:</label>
    <input type="number" name="foodCost" id="foodCost" [(ngModel)]="foodCost" (input)="getTotal()">
</p>
<p>
    <label for="travelCost">Travel Cost:</label>
    <input type="number" name="travelCost" id="travelCost" [(ngModel)]="travelCost" (input)="getTotal()">
</p>
<p>
    <label for="stayingCost">Staying Cost:</label>
    <input type="number" name="stayingCost" id="stayingCost" [(ngModel)]="stayingCost" (input)="getTotal()">
</p>
<h3>Total cost: {{total}} Rs</h3>
