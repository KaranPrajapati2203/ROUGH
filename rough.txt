let jsonData = {
  destinations: [
    { id: 1, name: "City B" },
    { id: 2, name: "City D" },
    { id: 3, name: "City F" },
    { id: 4, name: "City M" },
    { id: 5, name: "City P" },
  ],
  sources: [
    { id: 1, name: "City A" },
    { id: 2, name: "City C" },
    { id: 3, name: "City E" },
    { id: 4, name: "City T" },
    { id: 5, name: "City U" },
    { id: 6, name: "City K" },
  ],
  flights: [
    { flightID: 1, name: "Flight 1", price: 300, sourceID: 1, destinationID: 2, departureDate: "2023-12-15" },
    { flightID: 2, name: "Flight 2", price: 250, sourceID: 3, destinationID: 4, departureDate: "2023-12-18" },
    { flightID: 3, name: "Flight 3", price: 400, sourceID: 5, destinationID: 2, departureDate: "2023-12-20" },
    { flightID: 4, name: "Flight 4", price: 350, sourceID: 2, destinationID: 1, departureDate: "2023-12-22" },
    { flightID: 5, name: "Flight 5", price: 280, sourceID: 4, destinationID: 3, departureDate: "2023-12-25" },
    { flightID: 6, name: "Flight 6", price: 420, sourceID: 6, destinationID: 5, departureDate: "2023-12-28" },
    { flightID: 7, name: "Flight 7", price: 320, sourceID: 1, destinationID: 3, departureDate: "2023-12-30" },
    { flightID: 8, name: "Flight 8", price: 260, sourceID: 3, destinationID: 5, departureDate: "2024-01-02" },
    { flightID: 9, name: "Flight 9", price: 380, sourceID: 5, destinationID: 1, departureDate: "2024-01-05" },
    { flightID: 10, name: "Flight 10", price: 310, sourceID: 2, destinationID: 4, departureDate: "2024-01-08" },
  ]
};

let destinationDetails = jsonData.destinations;
let flightDetails = jsonData.flights;
let sourceDetails = jsonData.sources;
let departureDate = "";
let todaysDate = convertToRequiredFormat("2024-01-02");

$(document).ready(() => {
  if (window.location.pathname === "/") {
    window.history.replaceState({}, "", "/searchflight");
  }
  for (let source of sourceDetails) {
    let option = `<option value="${source.id}">${source.name}</option>`
    $("#Source").append(option);
  }

  for (let destination of destinationDetails) {
    let option = `<option value="${destination.id}">${destination.name}</option>`
    $("#Destination").append(option);
  }
  for (let flight of flightDetails) {
    let result = ""
    let sourceText = "";
    let destinationText = "";
    for (let source of sourceDetails) {
      if (flight.sourceID == source.id) {
        sourceText = source.name;
      }
    }
    for (let destination of destinationDetails) {
      if (flight.destinationID == destination.id) {
        destinationText = destination.name;
      }
    }
    let tabledata = `
              <tr id="item${flight.flightID}" class="${flight.name.replaceAll(" ", "")}" value="${flight.departureDate}">
                <th scope="row">${flight.name}</th>
                <td>${sourceText}</td>
                <td>${destinationText}</td>
                <td>${flight.price}</td>
                <td><button class="btn btn-primary w-50" id="btnBook${flight.flightID}" onclick="getBookDetails(${flight.flightID})">Book</button></td>
              </tr>
    `;
    result += tabledata
    $("#flightDetails").append(result);
  }

  $("#btnSearch").click((e) => {
    e.preventDefault();

    let selectedSource = $("#Source").val();
    let selectedDestination = $("#Destination").val();
    let selectedDate = convertToRequiredFormat($("#departureDate").val());
    let searchbox = $("#txtSearch").val();
    $("#flightDetails tr").removeClass("d-none");

    if (searchbox == "") {
      if (selectedSource != "" && selectedDestination == "") {
        for (let flight of flightDetails) {
          $(`.${flight.name.replaceAll(" ", "")}`).addClass("d-none");

          if (flight.sourceID == selectedSource) {
            $(`.${flight.name.replaceAll(" ", "")}`).removeClass("d-none");
          }

        }
      } else if (selectedSource != "" && selectedDestination != "") {
        for (let flight of flightDetails) {
          $(`.${flight.name.replaceAll(" ", "")}`).addClass("d-none");

          if (flight.sourceID == selectedSource && flight.destinationID == selectedDestination) {
            $(`.${flight.name.replaceAll(" ", "")}`).removeClass("d-none");
          }

        }
      } else {
        for (let flight of flightDetails) {
          $(`.${flight.name.replaceAll(" ", "")}`).addClass("d-none");

          if (flight.destinationID == selectedDestination) {
            $(`.${flight.name.replaceAll(" ", "")}`).removeClass("d-none");
          }

        }
      }
    } else {
      if (selectedSource == "" && selectedDestination == "") {
        for (let flight of flightDetails) {
          $(`.${flight.name.replaceAll(" ", "")}`).addClass("d-none");

          if (flight.name == searchbox) {
            $(`.${flight.name.replaceAll(" ", "")}`).removeClass("d-none");
          }

        }
      } else if (selectedSource != "" && selectedDestination == "") {
        for (let flight of flightDetails) {
          $(`.${flight.name.replaceAll(" ", "")}`).addClass("d-none");

          if (flight.sourceID == selectedSource && flight.name == searchbox) {
            $(`.${flight.name.replaceAll(" ", "")}`).removeClass("d-none");
          }

        }
      } else if (selectedSource == "" && selectedDestination != "") {
        for (let flight of flightDetails) {
          $(`.${flight.name.replaceAll(" ", "")}`).addClass("d-none");

          if (flight.destinationID == selectedDestination && flight.name == searchbox) {
            $(`.${flight.name.replaceAll(" ", "")}`).removeClass("d-none");
          }

        }
      } else {
        for (let flight of flightDetails) {
          $(`.${flight.name.replaceAll(" ", "")}`).addClass("d-none");

          if (flight.sourceID == selectedSource && flight.destinationID == selectedDestination && flight.name == searchbox) {
            $(`.${flight.name.replaceAll(" ", "")}`).removeClass("d-none");
          }

        }
      }
    }
  });


  $("#btnbook").click(() => {

    let isValid = isFormValid();
    if (isValid == true) {
      let result = "";
      let pnr = generatePNR();
      window.history.pushState({}, "", `/bookinghistory/${pnr}`);
      $(".bookflight").addClass("d-none");
      $(".bookinghistory").removeClass("d-none");
      let flightname = $("#flightname").text();
      let totalprice = $("#pricewithtax").text();
      let totalperson = $("#Qty").val();
      let dateofbooking = todaysDate;
      let dateofdeparture = departureDate;

      let bookingdetail = { pnr: pnr, flightname: flightname, totalprice: totalprice, totalperson: totalperson, dateofbooking: dateofbooking, dateofdeparture: dateofdeparture };
      localStorage.setItem(pnr, JSON.stringify(bookingdetail));
      for (let i = 0; i < localStorage.length; i++) {
        let key = localStorage.key(i);
        let data = JSON.parse(localStorage.getItem(key))
        let historytabledata = `
                  <tr id="row${data.pnr}">
                    <th scope="row">${data.pnr}</th>
                    <td>${data.flightname}</td>
                    <td> &#x20B9; ${data.totalprice}</td>
                    <td>${data.totalperson}</td>
                    <td>${data.dateofbooking}</td>
                    <td>${data.dateofdeparture}</td>
                    <td><button class="btn btn-danger w-75 text-center" id="cancel${data.pnr}" onclick="cancelbooking('${data.pnr}')">Cancel</button></td>
                  </tr>
        `;
        result += historytabledata;
      }
      $("#historydetails").append(result);
    }
  });
})

function cancelbooking(pnr) {
  if (confirm("Are you sure you want to cancel this booking?")) {
    localStorage.removeItem(pnr);
    $(`#row${pnr}`).addClass("d-none");
  }
}
function generatePNR() {
  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
  let pnr = "";
  for (let i = 1; i <= 6; i++) {
    pnr += characters.charAt(Math.floor(Math.random() * characters.length));
  }
  return pnr;
}

function isFormValid() {
  let flag = true;
  let name = $("#Name").val();
  let personQty = $("#Qty").val();
  let nameError = $("#ErrorName");
  let personError = $("#ErrorQty");
  if (name == "") {
    nameError.text("Name can not be Blank");
    flag = false;
  } else if (name.length < 4) {
    nameError.text("Minimum 4 characters required");
    flag = false;
  }

  if (personQty == "") {
    personError.text("Quantity can not be Blank");
    flag = false;
  } else if (isNaN(personQty)) {
    personError.text("Only Number required");
    flag = false;
  } else if (personQty < 0 || personQty > 10) {
    personError.text("No of Person can not be more than 10 and less or equal to zero");
    flag = false;
  }

  return flag;
}

function getBookDetails(flightid) {
  window.history.pushState({}, "", "/bookflight");

  $(".bookflight").removeClass("d-none");
  $(".searchflight").addClass("d-none");
  let flightName = $(`#item${flightid} th`).text();
  let pricewithtax = 0;
  let price = parseFloat($(`#item${flightid}> td:nth-child(4)`).text()).toFixed(2);
  let tax = parseFloat(price / 10).toFixed(2);
  departureDate = $(`#item${flightid}`).attr("value");

  $("#Qty").keyup(() => {
    let quantity = parseInt($("#Qty").val());
    let totalprice = parseInt(price * quantity);
    let totaltax = totalprice / 10;
    pricewithtax = totalprice + totaltax;
    $("#pricewithtax").text(pricewithtax);
  })

  $("#flightname").text(flightName);
  $("#price").text(price);
  $("#tax").text(tax);
  $("#pricewithtax").text(pricewithtax);
}

function convertToRequiredFormat(date) {
  let orgdate = new Date(date);
  let todaysDay = orgdate.getDate();
  let todaysMonth = orgdate.getMonth() + 1;
  let todaysYear = orgdate.getFullYear();

  if (todaysDay.toString().length == 1) {
    todaysDay = `0${todaysDay}`;
  }
  if (todaysMonth.toString().length == 1) {
    todaysMonth = `0${todaysMonth}`;
  }

  return `${todaysYear}-${todaysMonth}-${todaysDay}`;
}

window.addEventListener("popstate", (event) => {
  let path = window.location.pathname;

  if (path === "/searchflight") {
    $(".searchflight").removeClass("d-none");
    $(".bookflight, .bookinghistory").addClass("d-none");
  } else if (path === "/bookflight") {
    $(".bookflight").removeClass("d-none");
    $(".searchflight, .bookinghistory").addClass("d-none");
  } else if (path.startsWith("/bookinghistory")) {
    $(".bookinghistory").removeClass("d-none");
    $(".searchflight, .bookflight").addClass("d-none");
  }
});
