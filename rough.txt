import { CommonModule } from '@angular/common';
import { Component, OnInit } from '@angular/core';
import { FormArray, FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';

@Component({
  selector: 'app-profile',
  standalone: true,
  imports: [ReactiveFormsModule, CommonModule],
  templateUrl: './profile.component.html',
  styleUrls: ['./profile.component.css']
})
export class ProfileComponent implements OnInit {
  myForm!: FormGroup;

  ngOnInit() {
    this.myForm = new FormGroup({
      phone: new FormArray([
        new FormControl('', [
          Validators.required,
          Validators.pattern(/^[0-9]{10}$/)
        ])
      ])
    });
  }

  checkFormStatus() {
    return this.phone.controls.some((control) => control.invalid && control.touched);
  }

  removeFields(index: number) {
    this.phone.removeAt(index);
    if (this.phone.length === 0) {
      this.addNumberFields(); // Ensure at least one field remains
    }
  }

  addNumberFields() {
    this.phone.push(
      new FormControl('', [
        Validators.required,
        Validators.pattern(/^[0-9]{10}$/)
      ])
    );
  }

  get phone() {
    return this.myForm.get('phone') as FormArray;
  }
}

-----

<form [formGroup]="myForm">
    <button type="button" (click)="addNumberFields()" id="add-phone-button">
        Add Phone Number
    </button>

    <ng-container formArrayName="phone" *ngFor="let control of phone.controls; let i = index">
        <div>
            <label for="phone-input-{{ i }}">Enter Phone Number:</label>
            <input type="number" [formControlName]="i" id="phone-input-{{ i }}" name="phone-input" />
            <button type="button" (click)="removeFields(i)" id="remove-phone-button-{{ i }}" *ngIf="phone.length > 1">
                Remove
            </button>
        </div>

        <span *ngIf="control.invalid && control.touched" class="error" id="phone-error-{{ i }}">
            Phone number must be 10 digits.
        </span>
    </ng-container>

    <div *ngIf="checkFormStatus()" class="error">
        At least one valid phone number is required.
    </div>
</form>

-------------------------------------------------------------------------------------------------------------------

import { Component } from '@angular/core';
import { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent {
  phoneForm: FormGroup;

  constructor() {
    this.phoneForm = new FormGroup({
      phoneNumbers: new FormArray([this.createPhoneControl()])
    });
  }

  get phoneNumbers(): FormArray {
    return this.phoneForm.get('phoneNumbers') as FormArray;
  }

  private createPhoneControl(): FormControl {
    return new FormControl('', [
      Validators.required,
      Validators.pattern(/^\d{10}$/) // Validates 10-digit numeric phone numbers
    ]);
  }

  addPhoneNumber(): void {
    this.phoneNumbers.push(this.createPhoneControl());
  }

  removePhoneNumber(index: number): void {
    if (this.phoneNumbers.length > 1) {
      this.phoneNumbers.removeAt(index);
    }
  }

  onSubmit(): void {
    if (this.phoneForm.valid) {
      console.log('Submitted Data:', this.phoneForm.value.phoneNumbers);
    } else {
      // Mark all controls as touched to display validation messages
      this.phoneNumbers.controls.forEach(control => control.markAsTouched());
    }
  }
}

-----

<div class="container">
  <form [formGroup]="phoneForm" (ngSubmit)="onSubmit()">
    <label for="phone-array">Contact Phone Numbers</label>
    <div formArrayName="phoneNumbers" id="phone-array">
      <div *ngFor="let control of phoneNumbers.controls; let i = index" [formGroupName]="i">
        <input
          type="text"
          [id]="'phone-input-' + i"
          [formControl]="control"
          placeholder="Enter phone number"
        />
        <button
          type="button"
          [id]="'remove-phone-button-' + i"
          (click)="removePhoneNumber(i)"
          *ngIf="phoneNumbers.length > 1"
        >
          Remove
        </button>
        <div *ngIf="control.invalid && control.touched" [id]="'phone-error-' + i" class="error">
          Phone number must be 10 digits
        </div>
      </div>
    </div>
    <button type="button" id="add-phone-button" (click)="addPhoneNumber()">Add Phone Number</button>
    <button type="submit" id="submit-button">Submit</button>
  </form>
</div>
