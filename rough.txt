<!doctype html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <link rel="icon" type="image/svg+xml" href="/vite.svg" />
  <link rel="stylesheet" href="style.css">
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <title>Assignment 1</title>
</head>

<body>
  <section id="clockarea">
    <div class="d-flex justify-content-around">
      <div id="current-time">
        <label for="timer">Current Time:</label>
        <h3 id="timer"></h3>
      </div>
      <div>
        <button class="btn btn-primary" id="start">Start Exam!!</button>
      </div>
    </div>
    <div id="content">
      <h1 id="status">Exam has not started</h1>
    </div>
  </section>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  <script src="/main.js"></script>
</body>

</html>

-------------------------------------------------------------------------------------------------------------------------------------------

$(document).ready(function () {
  // Display the real-time clock every second
  setInterval(() => {
    let date = new Date();
    let hour = date.getHours();
    let minute = date.getMinutes();
    let second = date.getSeconds();
    let time = `${hour} hrs ${minute} m ${second} s`;
    document.getElementById("timer").innerText = time;
  }, 1000);

  // Change status to 'Exam is ongoing' and start the reverse countdown
  $("#start").click(() => {
    let totalSeconds = 10800; // 3 hours = 10800 seconds
    document.getElementById("status").innerText = "Exam is ongoing"; // Change status
    startExamTimer(totalSeconds); // Start the countdown
  });
});

function startExamTimer(totalSeconds) {
  let button = $("#start");
  let timerInterval = setInterval(() => {
    let hours = Math.floor(totalSeconds / 3600);
    let minutes = Math.floor((totalSeconds % 3600) / 60);
    let seconds = totalSeconds % 60;

    let timeDisplay = `${hours} hrs ${minutes} m ${seconds} s`;
    button.text(timeDisplay); // Show reverse countdown at the button place

    if (totalSeconds > 0) {
      totalSeconds--; // Decrement by 1 second
    } else {
      clearInterval(timerInterval); // Stop the timer when it reaches 0
      button.text("Exam Finished"); // Replace button text with 'Exam Finished'
      document.getElementById("status").innerText = "Exam is finished"; // Change status to 'finished'
      alert("Time's up! The exam has ended.");
    }
  }, 1000);
}

------------------------------------------------------------------------------------------------------------------------------------------

let leaveDaysStyle = data.LeaveDays > 5 ? "color: red;" : "color: black;";

------------------------------------------------------------------------------------------------------------------------------------------

<!doctype html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Drink List</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
  <div class="container">
    <h1 class="my-4">Drinks List</h1>

    <!-- Dropdown for ingredients -->
    <div class="mb-3">
      <label for="ingredientDropdown" class="form-label">Filter by Ingredient</label>
      <select id="ingredientDropdown" class="form-select">
        <option value="">Select an Ingredient</option>
        <!-- Ingredients will be populated here dynamically -->
      </select>
    </div>

    <!-- Drink cards container -->
    <div id="drinkList" class="row">
      <!-- Drink cards will be populated here -->
    </div>
  </div>

  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script src="/main.js"></script>
</body>
</html>


---------------------------------------------------------------------------------------------------------------

$(document).ready(function() {
  // Array of static ingredients for the dropdown
  const ingredientsList = ["Vodka", "Rum", "Gin", "Tequila", "Lemon", "Mint"];

  // Example array of drinks data coming from an API (with individual ingredient fields)
  const drinksData = [
    {
      name: "Mojito",
      ingredient1: "Rum",
      ingredient2: "Mint",
      ingredient3: "Lemon",
      ingredient4: null,
      description: "A refreshing mint and lime cocktail.",
    },
    {
      name: "Margarita",
      ingredient1: "Tequila",
      ingredient2: "Lemon",
      ingredient3: null,
      ingredient4: null,
      description: "A classic tequila cocktail with lime and salt.",
    },
    {
      name: "Bloody Mary",
      ingredient1: "Vodka",
      ingredient2: "Tomato Juice",
      ingredient3: null,
      ingredient4: null,
      description: "A spicy tomato and vodka cocktail.",
    },
    // ... Add more drinks with their ingredients
  ];

  // Populate the dropdown with the ingredients
  const ingredientDropdown = $("#ingredientDropdown");
  ingredientsList.forEach(ingredient => {
    ingredientDropdown.append(`<option value="${ingredient}">${ingredient}</option>`);
  });

  // Function to extract ingredients from a drink object
  function getIngredients(drink) {
    let ingredients = [];
    for (let i = 1; i <= 15; i++) {
      let ingredient = drink[`ingredient${i}`];
      if (ingredient) {
        ingredients.push(ingredient); // Add non-null ingredients to the array
      }
    }
    return ingredients;
  }

  // Function to render drink cards
  function renderDrinks(drinks) {
    const drinkList = $("#drinkList");
    drinkList.empty(); // Clear existing drink cards

    drinks.forEach(drink => {
      let ingredients = getIngredients(drink); // Get ingredients from the drink object
      const drinkCard = `
        <div class="col-md-4">
          <div class="card mb-4">
            <div class="card-body">
              <h5 class="card-title">${drink.name}</h5>
              <p class="card-text">${drink.description}</p>
              <p class="card-text"><strong>Ingredients:</strong> ${ingredients.join(", ")}</p>
            </div>
          </div>
        </div>`;
      drinkList.append(drinkCard);
    });
  }

  // Initially render all drinks
  renderDrinks(drinksData);

  // Event listener for dropdown change
  ingredientDropdown.change(function() {
    const selectedIngredient = $(this).val();

    if (selectedIngredient) {
      // Filter drinks that contain the selected ingredient in any ingredient field
      const filteredDrinks = drinksData.filter(drink => {
        let ingredients = getIngredients(drink);
        return ingredients.includes(selectedIngredient);
      });
      renderDrinks(filteredDrinks);
    } else {
      // If no ingredient is selected, show all drinks
      renderDrinks(drinksData);
    }
  });
});
