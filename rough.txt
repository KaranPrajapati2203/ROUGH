public void GenerateReport1()
{
    string targetDoctor = "Dr. A. Kumar"; // Specify the doctor's name
    using (HospitalContext db = new HospitalContext())
    {
        // Get the doctor's ID
        var doctorId = db.AssistantLists
            .Where(d => d.AssistantName == targetDoctor)
            .Select(d => d.AssistantId)
            .FirstOrDefault();

        if (doctorId == 0)
        {
            Console.WriteLine($"Doctor {targetDoctor} not found.");
            return;
        }

        // Find all patients assigned to the doctor
        var patientAssignments = db.PatientAssignments
            .Where(pa => pa.AssistantId == doctorId)
            .Select(pa => pa.PatientId)
            .ToList();

        if (patientAssignments.Count == 0)
        {
            Console.WriteLine($"No patients assigned to Dr. {targetDoctor}.");
            return;
        }

        Console.WriteLine($"Patients assigned to Dr. {targetDoctor}:");
        foreach (var patientId in patientAssignments)
        {
            var patientName = db.Patients
                .Where(p => p.PatientId == patientId)
                .Select(p => p.PatientName)
                .FirstOrDefault();

            Console.WriteLine($"- Patient ID: {patientId}, Name: {patientName}");
        }
    }
}


----------

public void GenerateReport1()
{
    string targetDoctor = "Dr. A. Kumar"; // Specify the doctor's name
    using (HospitalContext db = new HospitalContext())
    {
        // Fetch the doctor's ID
        var doctorId = db.AssistantLists
            .Where(d => d.AssistantName == targetDoctor)
            .Select(d => d.AssistantId)
            .FirstOrDefault();

        if (doctorId == 0)
        {
            Console.WriteLine($"Doctor {targetDoctor} not found.");
            return;
        }

        // Fetch patient IDs assigned to the doctor (in-memory)
        var patientIds = db.PatientAssignments
            .Where(pa => pa.AssistantId == doctorId)
            .Select(pa => pa.PatientId)
            .ToList();

        if (patientIds.Count == 0)
        {
            Console.WriteLine($"No patients assigned to Dr. {targetDoctor}.");
            return;
        }

        // Fetch patient details for assigned IDs (in-memory)
        var patients = db.Patients
            .Where(p => patientIds.Contains(p.PatientId))
            .Select(p => new { p.PatientId, p.PatientName })
            .ToList();

        // Display results
        Console.WriteLine($"Patients assigned to Dr. {targetDoctor}:");
        foreach (var patient in patients)
        {
            Console.WriteLine($"- Patient ID: {patient.PatientId}, Name: {patient.PatientName}");
        }
    }
}

----------

public void GenerateReport1()
{
    string targetDoctor = "Dr. A. Kumar"; // Specify the doctor's name
    using (HospitalContext db = new HospitalContext())
    {
        // Fetch the doctor's ID
        var doctorId = db.AssistantLists
            .Where(d => d.AssistantName == targetDoctor)
            .Select(d => d.AssistantId)
            .FirstOrDefault();

        if (doctorId == 0)
        {
            Console.WriteLine($"Doctor {targetDoctor} not found.");
            return;
        }

        // Fetch patient IDs assigned to the doctor (in-memory)
        var patientIds = db.PatientAssignments
            .Where(pa => pa.AssistantId == doctorId)
            .Select(pa => pa.PatientId)
            .ToList();

        if (patientIds.Count == 0)
        {
            Console.WriteLine($"No patients assigned to Dr. {targetDoctor}.");
            return;
        }

        // Fetch patient details, including department, for assigned IDs
        var patients = db.Patients
            .Where(p => patientIds.Contains(p.PatientId))
            .Select(p => new
            {
                p.PatientId,
                p.PatientName,
                DepartmentName = p.PatientDepartment.DepartmentName // Navigating to Department
            })
            .ToList();

        // Display results
        Console.WriteLine($"Patients assigned to Dr. {targetDoctor}:");
        foreach (var patient in patients)
        {
            Console.WriteLine($"- Patient ID: {patient.PatientId}, Name: {patient.PatientName}, Department: {patient.DepartmentName}");
        }
    }
}


-------------------------------------------------------------------------------------------------------------------------------------


public void GenerateMedicineReportForPatient()
{
    string targetPatient = "Rohan Singh"; // Specify the patient's name
    using (HospitalContext db = new HospitalContext())
    {
        // Fetch the patient ID based on the patient's name
        var patientId = db.Patients
            .Where(p => p.PatientName == targetPatient)
            .Select(p => p.PatientId)
            .FirstOrDefault();

        if (patientId == 0)
        {
            Console.WriteLine($"Patient {targetPatient} not found.");
            return;
        }

        // Fetch medicines prescribed to the patient
        var medicines = db.DrugPrescriptions
            .Where(dp => dp.PatientId == patientId)
            .Select(dp => new
            {
                dp.Drug.DrugName,        // Drug name
                dp.Drug.DrugPrice,       // Drug price
                dp.IntakeDuration,       // When to take the drug
                PrescribedBy = dp.PrescribedByNavigation.AssistantName // Name of the doctor/nurse who prescribed
            })
            .ToList();

        if (medicines.Count == 0)
        {
            Console.WriteLine($"No medicines found for patient {targetPatient}.");
            return;
        }

        // Display report
        Console.WriteLine($"Medicine list for patient {targetPatient}:");
        foreach (var medicine in medicines)
        {
            Console.WriteLine($"- Drug Name: {medicine.DrugName}, Price: {medicine.DrugPrice:C}, " +
                              $"Intake: {medicine.IntakeDuration}, Prescribed By: {medicine.PrescribedBy}");
        }
    }
}


----------------------------------------------------------------------------------------------------------------------------------------

public void DisplayDoctorPatientSummaryReport()
{
    using (HospitalContext db = new HospitalContext())
    {
        // Query to fetch doctors and their assigned patients
        var doctorPatientSummary = db.PatientAssignments
            .GroupBy(pa => pa.Assistant.AssistantName) // Group by doctor's name
            .Select(group => new
            {
                DoctorName = group.Key, // Doctor's name
                Patients = group.Select(pa => pa.Patient.PatientName).Distinct().ToList() // List of unique patient names
            })
            .ToList();

        if (doctorPatientSummary.Count == 0)
        {
            Console.WriteLine("No doctor-patient assignments found.");
            return;
        }

        // Display the summary report
        Console.WriteLine("Doctor-Patient Summary Report:");
        foreach (var entry in doctorPatientSummary)
        {
            Console.WriteLine($"Doctor: {entry.DoctorName}");
            if (entry.Patients.Count > 0)
            {
                Console.WriteLine("Assigned Patients:");
                foreach (var patient in entry.Patients)
                {
                    Console.WriteLine($"- {patient}");
                }
            }
            else
            {
                Console.WriteLine("No patients assigned.");
            }
            Console.WriteLine(); // Add spacing between entries
        }
    }
}
